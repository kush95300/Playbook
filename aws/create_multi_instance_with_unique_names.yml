---
- name: "Create Aws Instance"
  hosts: localhost
  become: yes
  become_user: root 
  vars_files:
          - ~/secret.yml
          - type/default.yml
  vars:
                  ansible_python_interpreter: /usr/bin/python
  tasks:
          - name: "Setting Packages"
            package:
                  name: 
                   - "httpd"
                   - "python3"
                   - "python2-pip"
                  state: present
          - name: "Installing Boto 3"
            pip:
                  name: boto3
          - name: "Setting Count"
            set_fact:
                  loop_index: "{{range(1, counts + 1) | list}}"
          - name: " Createing instance"
            ec2_instance:
                    name: "{{ i_name }}-{{ item }}"
                    key_name: "{{ key }}"
                    instance_type: "{{ i_type }}"
                    image_id: "{{ img }}"
                    wait: yes
                    wait_timeout: 30
                    security_group: "{{ sg }}"
                    vpc_subnet_id: "{{ subnet }}"
                    network:
                            assign_public_ip: yes
                    aws_access_key: "{{ pass }}"
                    aws_secret_key: "{{ secret_pass }}"
                    region: "{{ zone }}"
                    tags:
                            tag: "{{ tag }}"
            register: kush
            loop: "{{ loop_index }}"
            #loop:
            #       - '1'
            #       - '2'
            #       - '3'

          - name: "Instance Detail"
            debug:
                    var: item.instances[0].public_ip_address
            loop: "{{ kush.results }}"
            register: instances
          - block:
                  - name: "updating topicy"
                    shell: "grep 'auto_{{ use_case }}' {{ inventory }}"
                    changed_when: false
            rescue:
                  - name: "Creating group tag"
                    shell: "echo -e '\n[auto_{{ use_case }}]' | cat >> {{ inventory }}"
          - name: "updating Inventory"
            lineinfile:
                  dest: "{{ inventory }}"
                  regexp: '^[auto_weservers]'
                  line: "{{ item['item.instances[0].public_ip_address'] }} ansible_user=ec2-user ansible_ssh_private_key_file=~/newkey.pem  ansible-connection=ssh #{{ tag }}"
            loop: "{{ instances.results }}"   

          - meta: refresh_inventory 
