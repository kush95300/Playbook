---
- name: "Create Aws Instance"
  hosts: localhost
  become: yes
  become_user: root 
  vars:
                  ansible_python_interpreter: /usr/bin/python
  vars_files:
          - /home/ec2-user/secret.yml    # my credential 
          - parameters.yml
          # - credential.safe 
  tasks:
          - package:
                  name: 
                   - "python3"
                   - "python2-pip"
                  state: present
          - pip:
                  name: boto3
          - name: " Createing instance"
            ec2_instance:
                    name: "{{ i_name }}"
                    key_name: "{{ key }}" 
                    instance_type: "{{ i_type }}"
                    image_id: "{{ ami_id }}" 
                    wait: yes
                    security_group: "{{ sg }}" 
                    vpc_subnet_id: "{{ subnet }}"
                    network:
                            assign_public_ip: yes
                    aws_access_key: "{{ pass }}" 
                    aws_secret_key: "{{ secret_pass }}"
                    region: "{{ area }}"
            register: x

          - name: "Instance Detail"
            debug:
                  msg: "{{ x }}"

          - block:
                  - name: "updating topic"
                    shell: "grep 'auto_webservers' {{ inventory }}"
                    changed_when: false
            rescue:
                    - name: "Creating group tag"
                      shell: "echo -e '\n[auto_webservers]' | cat >> {{ inventory }}" 
          - name: "updating Inventory"
            lineinfile:
                    dest: "{{ inventory }}"
                    regexp: '^[auto_weservers]'
                    line: "{{ x.instances[0]['network_interfaces'][0]['association'].public_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=~/newkey.pem  ansible-connection=ssh" 

          - meta: refresh_inventory
- name: "Configuring Webserver"
  hosts: auto_webservers
  become_user: root
  become: yes
  tasks:
          - name: "check"
            command: "whoami"

          - name: "Installing Webserver"
            package:
                    name: 'httpd'
          - name: "Creating page"
            copy:
                    content: "Automation by ansible. Launched by ansible"
                    dest: "/var/www/html/index.html"
          - name: "start service"
            service:
                    name: httpd
                    state: started


